一、树的定义
定义：n个节点的有限集
1、有且仅有一个根节点
2、当n>1时奇遇节点可分为m个互不相交的有限集
树的定义是递归的，树的定义又用到了自身，树是一种递归的数据结构
特点：
1、树的根节点没有前驱，除根节点以外的所有节点有且仅有一个前驱
2、树中所有的节点可以有0或多个后继
节点的层次：根节点为第一层
节点的深度：根节点向下逐层累加
节点的高度：从叶节点自下而上逐层累加
树的高度或者深度：树节点的最大层数
3、有序树：节点从左到右有次序的，不能互换（无序树相反）
4、路径：树中两个节点之间的路径（同一个父节点的两个孩子节点之间不存在路径）
5、森林：m棵互不相交的树的集合
6、结点的度：树中一个结点的孩子个数称为该结点的度，树中结点最大度数称为树的度
7、度>0的节点称为分支节点，度为0的节点称为叶子结点

二、树的性质
1、树中结点数等于所有节点的度数+1
2、 度为m的树第i层上最多有m幂（i-1）个结点
3、高度为h的m叉树最多有（m幂（h）-1）/ （m-1）个结点
4、具有n个结点的m叉树的最小高度为[logm(n(m-1)+1)]

三、二叉树
1、斜树：所有结点都只有左子树的二叉树叫左斜树 同右
2、满二叉树：高度为h含有2幂h-1个结点的二叉树称作满二叉树，每个节点对应一个编号，双亲为i/2，
左孩子为2，右孩子为2i+1
3、完全二叉树：编号对应于满二叉树中编号的结点时称为完全二叉树
特点：
①若i<n/2，则结点i为分支节点，否则为叶子结点
②叶子结点只能在层次最大的两层上出现
③度为1的结点有且只可能有一个且该节点无右孩子
④按层序编号后，一旦出现某结点为叶子结点或者只有左孩子，则编号大于i的结点均为叶子结点
⑤若n为奇数，则每个分支节点又都左孩子和右孩子，若为偶数只有编号最大的结点n/2只有左孩子
4、二叉排序树：左子树所有结点均小于根节点 ，有字数均大于根节点
5、平衡二叉树：树上仁义结点的左子树和右子树深度之差不超过1

四、二叉树的存储结构
1、顺序存储结构
2、链式存储结构

五、遍历二叉树
1、先序遍历：访问根结点， 先序遍历左子树，先序遍历右子树 中左右
2、中序遍历：中序遍历左子树，访问根节点，中序遍历右子树 左中右
3、后序遍历：后序遍历左子树，后序遍历右子树，访问根节点 左右中

六、平衡二叉树
1、左右子树高度相差不超过1的为平衡二叉树
2、平衡因子：某结点的左子树与右子树高度差为该节点的平衡因子，平衡二叉树中不存在平衡因子大于1的结点 
1 0 -1 左子树高 登高 右子树高

3、
左旋：节点的右子树为轴，节点绕着轴逆时针旋转
右旋：节点的左子树为轴，节点绕着轴顺时针旋转


六点五、4阶B树 2-3-4树
1、结点类型
二节点：内部一个值(黑色)
三节点：内部两个值(红黑 黑红)
四结点：内部三个值(红黑红)
2、非叶子结点 n结点(2,3,4）n-1个值 则n个孩子


七、红黑树
1、特点
①结点是红色或者黑色
②根是黑色的
③所有的叶子是黑色的
④每个红色结点必须有两个黑色的子节点
⑤任意结点到其每个叶子结点包含相同的黑色结点（黑高）
空结点才是叶子结点
2、最长路径<=2*最短路径
3、红黑树的等价变换
①红黑树与4阶B树(2-3-4树)具有等价性
②黑色结点与红色结点融合在一起，形成一个B树结点
③红黑树的黑色结点个数与4阶B树的结点个数相等
④在所有B树中，永远黑色结点时父节点吗，红色结点时子节点
3、插入操作
插入的结点是红色，插入红色，黑色结点数量不变，无需调整其他路径， 仅需旋转变色调整

