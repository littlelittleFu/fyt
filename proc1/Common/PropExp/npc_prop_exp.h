#pragma once
#include "npc_table.hpp"

enum eNpcPropType {
	NPC_PROP_TYPE_MIN = 0,
	NPC_PROP_ID,
	NPC_PROP_NAME,
	NPC_PROP_SUBNAME,
	NPC_PROP_KEYNAME,
	NPC_PROP_SHOW,
	NPC_PROP_PICID,
	NPC_PROP_MODLE,
	NPC_PROP_SCRIPT,
	NPC_PROP_SPEAK,
	NPC_PROP_PATH,
	NPC_PROP_ICONTYPE,
	NPC_PROP_CONFIGTYPE,
	NPC_PROP_HASRANDOMACTION,
	NPC_PROP_HALFBODY,
	NPC_PROP_FIXDIRECTION,
	NPC_PROP_NAMEVERTICALOFFSET,
	NPC_PROP_NAMEHORIZONTALOFFSET,
	NPC_PROP_NAMEIMAGE,
	NPC_PROP_NAMECOLOR,
	NPC_PROP_BODYSIZE,
	NPC_PROP_XDRAWOFFSET,
	NPC_PROP_YDRAWOFFSET,
	NPC_PROP_NAMEVERTICALOFFSETMOBILE,
	NPC_PROP_MOBILENAME,
	NPC_PROP_HEADPICOFFSETY,

	NPC_PROP_TYPE_MAX,
};

inline bool GetNpcProp(uint16_t nNpcID, uint16_t nPropType)
{
	auto pConfig = sNpcConfig.Get(nNpcID);
	if (!pConfig) return false;

	if (nPropType <= NPC_PROP_TYPE_MIN || nPropType >= NPC_PROP_TYPE_MAX) return false;

	LUA_SAFE_BEGIN();
	switch (nPropType) {
		SETCASE(NPC_PROP_ID, Id);
		SETCASE(NPC_PROP_NAME, Name);
		SETCASE(NPC_PROP_SUBNAME, Subname);
		SETCASE(NPC_PROP_KEYNAME, KeyName);
		SETCASE(NPC_PROP_SHOW, Show);
		SETCASE(NPC_PROP_PICID, PicId);
		SETCASE(NPC_PROP_MODLE, Model);
		SETCASE(NPC_PROP_SCRIPT, Script);
		SETCASE(NPC_PROP_SPEAK, Speak);
		SETCASE(NPC_PROP_PATH, Path);
		SETCASE(NPC_PROP_ICONTYPE, Icontype);
		SETCASE(NPC_PROP_CONFIGTYPE, Configtype);
		SETCASE(NPC_PROP_HASRANDOMACTION, HasRandomAction);
		SETCASE(NPC_PROP_HALFBODY, HalfBody);
		SETCASE(NPC_PROP_FIXDIRECTION, FixDirection);
		SETCASE(NPC_PROP_NAMEVERTICALOFFSET, NameVerticalOffset);
		SETCASE(NPC_PROP_NAMEHORIZONTALOFFSET, NameHorizontalOffset);
		SETCASE(NPC_PROP_NAMEIMAGE, NameImage);
		SETCASE(NPC_PROP_NAMECOLOR, NameColor);
		SETCASE(NPC_PROP_BODYSIZE, BodySize);
		SETCASE(NPC_PROP_XDRAWOFFSET, XDrawOffset);
		SETCASE(NPC_PROP_YDRAWOFFSET, YDrawOffset);
		SETCASE(NPC_PROP_NAMEVERTICALOFFSETMOBILE, NameVerticalOffsetMobile);
		SETCASE(NPC_PROP_MOBILENAME, MobileName);
		SETCASE(NPC_PROP_HEADPICOFFSETY, HeadPicOffsetY);
	}

	LUA_SAFE_END(false);

	return true;
}